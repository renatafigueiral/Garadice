@model Garadice.Models.Company

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Company", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
 {
       @Html.AntiForgeryToken()

      <div class="form-horizontal">
        <h4>Company</h4>
          @*<p><i>All fields marked with an asterisk (*) are mandatory.</i></p>*@

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VatNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VatNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VatNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CRO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CRO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CRO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SiteUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SiteUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SiteUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.Label("Document 1", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("file1", "", new { type="file", @class="form-control" })
                <table cellpadding="5">
                <tr>
                    @foreach (var type in ViewData["DocumentTypes"] as List<string>)
                    {
                        <td>@type</td>
                        if (type == "AML")
                        {
                            <td>@Html.RadioButton("typeFile1", type, true)</td>
                        }
                        else
                        {
                            <td>@Html.RadioButton("typeFile1", type)</td>
                        }
                    }
                </tr>
                </table>
                Name
                @Html.TextBox("nameFile1", null, new { @class = "form-control text-box" })
                More Info
                @Html.TextArea("textFile1", new { @class = "form-control text-box multi-line" })
            </div>
        </div>
            <div class="form-group">
                @Html.Label("Document 2", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("file2", "", new { type = "file", @class = "form-control" })
                    <table cellpadding="5">
                        <tr>
                            @foreach (var type in ViewData["DocumentTypes"] as List<string>)
                            {
                                <td>@type</td>
                                 if (type == "AML")
                                 {
                                    <td>@Html.RadioButton("typeFile2", type,true)</td>                                 
                                 }
                                 else
                                 {
                                    <td>@Html.RadioButton("typeFile2", type)</td>
                                 }
                            }
                        </tr>
                    </table>
                    Name
                    @Html.TextBox("nameFile2", null, new { @class = "form-control text-box" })
                    More Info
                    @Html.TextArea("textFile2", new { @class = "form-control text-box multi-line" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Document 3", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("file3", "", new { type = "file", @class = "form-control" })
                    <table cellpadding="5">
                        <tr>
                            @foreach (var type in ViewData["DocumentTypes"] as List<string>)
                            {
                                <td>@type</td>
                                if (type == "AML")
                                {
                                    <td>@Html.RadioButton("typeFile3", type, true)</td>
                                }
                                else
                                {
                                    <td>@Html.RadioButton("typeFile3", type)</td>
                                }
                            }
                        </tr>
                    </table>
                    Name
                    @Html.TextBox("nameFile3", null, new { @class = "form-control text-box" })
                    More Info
                    @Html.TextArea("textFile3", new { @class = "form-control text-box multi-line" })
                </div>
            </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
